# JPA是一种规范
还是先记录一下今天所学的几个注解和理解吧
* 首先是关于JPA映射类型:
@OneToMany 一对多映射，例如一个学生只有一个班级
@ManyToOne 多对一,例如一个班拥有许多的学生。还有@OneToOne和@ManyToMany以后遇到再说。
* JPA级联操作:
  PERSIST MERGE DETACH REFRESH REMOVE ALL
  PERSIST	在这个级联操作中，如果父实体持久存在，则其所有相关实体也将被持久化。
  MERGE	在这个级联操作中，如果父实体被合并，则其所有相关实体也将被合并。
  DETACH	在这个级联操作中，如果父实体被分离，那么它的所有相关实体也将被分离。
  REFRESH	在此级联操作中，如果父实体被刷新，则其所有相关实体也将被刷新。
  REMOVE	在这个级联操作中，如果父实体被移除，则其所有相关实体也将被移除。
    ALL	在这种情况下，所有上述级联操作都可以应用于与父实体相关的实体。
具体用法：例如@OneToMany(cascade= cascadeType.PERSIST).
这里不得不提双向关系和单向关系了。
* 单向关联关系：单向关联关系，例如单向N-1,单向 n-1 关联只需从 n 的一端可以访问 1 的一端。
,俩者之间关系不紧密，例如消费者和订单，一个消费者有多个订单。
域模型：从 Order 到 Customer 的多对一单向关联需要在Order 类中定义一个 Customer 属性，而在 Customer 类中无需定义存放 Order 对象的集合属性。
注意。这里Customer类里面没有Order对象的集合。双向里面的有.(还有一般主控方是N方的)
在已经保存的数据中，删掉一方，并不影响多方。save操作的话，建议先插入一方，再插入N方，
这样，SQL语言少一些UPDATE操作，只有Insert语句。毕竟N方设置的外键.要关联1方，要刷新。
这里，单向的N-1的get操作，这里有懒加载机制。要1方对象的信息，才去查询.  删除的话，如果没有设置
级联操作：
      <set name="orders" table="ORDERS" cascade="delete">
在一端的对象有N端的对象应用的话,不能删除一端的对象。
* 双向关系： 例如双向1-N。1方的类要有N方的集合.如果使用了REMOVE级联操作.如果删除1方的对象。
与之关联的N方数据也会被删掉.
    双向 1-n 与双向 n-1 是完全相同的两种情形。
    双向 1-n 需要在1的一端可以访问n的一端,反之亦然。
    域模型:从Order到Customer的多对一双向关联需要在Order类中定义一个Customer属性,而在Customer类中需定义存放Order对象的集合属性。
    如果不希望俩端维护关联关系，一般通过设置inverse属性来觉得哪些方来维护表与表之间的关系。
    inverse = false的为主动方，inverse = true 的为被动方。由主动方负责维护关 联关系。在没有设置inverse属性的情况下，默认父子两边都维护父子关系。
    在双向N-1关系中，将n方设置为主控方.
